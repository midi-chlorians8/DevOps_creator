version: '3.8' # version: '3'

services:


  web:
    build: ./application
    # image: 734075410113.dkr.ecr.eu-central-1.amazonaws.com/fastapi-backend-repository-gorilla-prod:cc96d83
    # command: bash -c 'sleep 5;  uvicorn app.api:app --host 0.0.0.0' #bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn main:app --host 0.0.0.0'
    command: bash -c 'sleep 5; alembic upgrade head; python main.py --host 0.0.0.0' #bash -c 'while !</dev/tcp/db/5432; do sleep 1; done; uvicorn main:app --host 0.0.0.0'

    volumes:
      - .:/app
    # ports:
    #   - 8000:8000 #внеш / внутр
    # depends_on:
    #   - db
    restart: always
    environment: 
      - ENV_FILE=/application/.env
  db:
    container_name: "db"
    image: postgres:15.3-alpine
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    # ports:
    #   - 5432:5432 

  nginx:
    image: nginx:1.17
    restart: unless-stopped
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
      - ./public:/usr/share/nginx/html
    ports:
      - "80:80"
      - "443:443"
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    restart: unless-stopped
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  